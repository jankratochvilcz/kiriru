{"version":3,"sources":["components/atoms/Logo.tsx","components/organisms/AppHeader.tsx","components/organisms/Footer.tsx","assets/illustrations/noun_Sputnik_190534.svg","assets/illustrations/noun_dog astronaut_4119784.svg","assets/illustrations/noun_Astronaut_3437987.svg","assets/illustrations/noun_Astronaut_3437785.svg","assets/illustrations/noun_space station_2677019.svg","assets/illustrations/noun_spaceshuttle_1675163.svg","components/molecules/Level.tsx","components/organisms/Levels.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Logo","className","AppHeader","Footer","href","Level","achievmentTitle","illustrationPath","letters","achievmentLink","src","alt","map","x","Levels","sputnikIllustration","laikaIllustration","gagarinIllustration","tereshkovaIllustration","salyutIllustration","buranIllustration","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAQeA,EANF,kBACT,qBAAKC,UAAU,OAAf,mDCQWC,G,MARG,WACd,OACI,8BACI,cAAC,EAAD,QCGGC,G,MAPA,kBACX,sBAAKF,UAAU,cAAf,UACI,sCAAQ,mBAAGG,KAAK,qBAAR,oBACR,6CAAe,mBAAGA,KAAK,qCAAR,4BCLR,MAA0B,gDCA1B,MAA0B,uDCA1B,MAA0B,mDCA1B,MAA0B,mDCA1B,MAA0B,uDCA1B,MAA0B,sDCiC1BC,G,MAxBD,SAAC,GAA+E,IAA9EC,EAA6E,EAA7EA,gBAAiBC,EAA4D,EAA5DA,iBAAkBC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,eAGxD,OACI,sBAAKR,UAAU,aAAf,UACA,mBAAGA,UAAU,aAAaG,KAAMK,EAAhC,SACKH,IAEL,sBAAKL,UAAU,gBAAf,UACI,qBAAKA,UAAU,SACf,qBAAKA,UAAU,eAAf,SACI,qBAAKS,IAAKH,EAAkBI,IAAKL,MAErC,qBAAKL,UAAU,YAEnB,qBAAKA,UAAU,UAAf,SACKO,EAAQI,KAAI,SAAAC,GAAC,OACV,+BAAOA,cCyBRC,EA3CA,WACX,OACI,gCACI,cAAC,EAAD,CACIR,gBAAgB,YAChBG,eAAe,0CACfF,iBAAkBQ,EAClBP,QAAS,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,YAElC,cAAC,EAAD,CACIF,gBAAgB,QAChBG,eAAe,sCACfF,iBAAkBS,EAClBR,QAAS,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,YAElC,cAAC,EAAD,CACIF,gBAAgB,eAChBG,eAAe,6CACfF,iBAAkBU,EAClBT,QAAS,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,YAElC,cAAC,EAAD,CACIF,gBAAgB,uBAChBG,eAAe,qDACfF,iBAAkBW,EAClBV,QAAS,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,YAElC,cAAC,EAAD,CACIF,gBAAgB,WAChBG,eAAe,yCACfF,iBAAkBY,EAClBX,QAAS,CAAC,SAAI,SAAI,SAAI,SAAI,SAAI,YAElC,cAAC,EAAD,CACIF,gBAAgB,QAChBG,eAAe,mDACfF,iBAAkBa,EAClBZ,QAAS,CAAC,SAAI,SAAI,gBC3BnBa,MAZf,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,QCCSqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96d4a07e.chunk.js","sourcesContent":["import \"./Logo.scss\";\n\nconst Logo = () => (\n    <div className=\"logo\">\n        кириру\n    </div>\n);\n\nexport default Logo;","import Logo from \"../atoms/Logo\";\nimport \"./AppHeader.scss\";\n\nconst AppHeader = () => {\n    return (\n        <div>\n            <Logo />\n        </div>\n    )\n}\n\nexport default AppHeader;","import \"./Footer.scss\"\n\nconst Footer = () => (\n    <div className=\"footer-root\">\n        <div>by <a href=\"https://janjan.xyz\">Jan</a></div>\n        <div>source on <a href=\"github.com/jankratochvilcz/kiriru/\">GitHub</a></div>\n    </div>\n)\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/noun_Sputnik_190534.7181f209.svg\";","export default __webpack_public_path__ + \"static/media/noun_dog astronaut_4119784.d469fc47.svg\";","export default __webpack_public_path__ + \"static/media/noun_Astronaut_3437987.d2377867.svg\";","export default __webpack_public_path__ + \"static/media/noun_Astronaut_3437785.4fbff19f.svg\";","export default __webpack_public_path__ + \"static/media/noun_space station_2677019.cda22c5a.svg\";","export default __webpack_public_path__ + \"static/media/noun_spaceshuttle_1675163.1e5df0e6.svg\";","import \"./Level.scss\";\n\ntype LevelProps = {\n    achievmentTitle: string,\n    illustrationPath: string,\n    letters: string[]\n    achievmentLink: string\n}\n\nconst Level = ({achievmentTitle, illustrationPath, letters, achievmentLink }: LevelProps) => {\n\n\n    return (\n        <div className=\"level-root\">\n        <a className=\"achievment\" href={achievmentLink}>\n            {achievmentTitle}\n        </a>\n        <div className=\"center-column\">\n            <div className=\"line\" />\n            <div className=\"illustration\">\n                <img src={illustrationPath} alt={achievmentTitle} />\n            </div>\n            <div className=\"line\" />\n        </div>\n        <div className=\"letters\">\n            {letters.map(x => (\n                <span>{x}</span>\n            ))}\n        </div>\n    </div>\n    )\n}\n\nexport default Level;","import sputnikIllustration from \"../../assets/illustrations/noun_Sputnik_190534.svg\"\nimport laikaIllustration from \"../../assets/illustrations/noun_dog astronaut_4119784.svg\"\nimport gagarinIllustration from \"../../assets/illustrations/noun_Astronaut_3437987.svg\"\nimport tereshkovaIllustration from \"../../assets/illustrations/noun_Astronaut_3437785.svg\"\nimport salyutIllustration from \"../../assets/illustrations/noun_space station_2677019.svg\"\nimport buranIllustration from \"../../assets/illustrations/noun_spaceshuttle_1675163.svg\"\nimport Level from \"../molecules/Level\"\n\nconst Levels = () => {\n    return (\n        <div>\n            <Level\n                achievmentTitle=\"Sputnik 1\"\n                achievmentLink=\"https://en.wikipedia.org/wiki/Sputnik_1\"\n                illustrationPath={sputnikIllustration}\n                letters={[\"О\",\"Е\",\"А\",\"И\",\"Н\",\"Т\"]}\n            />\n            <Level\n                achievmentTitle=\"Laika\"\n                achievmentLink=\"https://en.wikipedia.org/wiki/Laika\"\n                illustrationPath={laikaIllustration}\n                letters={[\"С\",\"Л\",\"В\",\"Р\",\"К\",\"М\"]}\n            />\n            <Level\n                achievmentTitle=\"Yuri Gagarin\"\n                achievmentLink=\"https://en.wikipedia.org/wiki/Yuri_Gagarin\"\n                illustrationPath={gagarinIllustration}\n                letters={[\"Д\",\"П\",\"Ы\",\"У\",\"Б\",\"Я\"]}\n            />\n            <Level\n                achievmentTitle=\"Valentina Tereshkova\"\n                achievmentLink=\"https://en.wikipedia.org/wiki/Valentina_Tereshkova\"\n                illustrationPath={tereshkovaIllustration}\n                letters={[\"Ь\",\"Г\",\"З\",\"Ч\",\"Й\",\"Ж\"]}\n            />\n            <Level\n                achievmentTitle=\"Salyut 1\"\n                achievmentLink=\"https://en.wikipedia.org/wiki/Salyut_1\"\n                illustrationPath={salyutIllustration}\n                letters={[\"Х\",\"Ш\",\"Ю\",\"Ц\",\"Э\",\"Щ\"]}\n            />\n            <Level\n                achievmentTitle=\"Buran\"\n                achievmentLink=\"https://en.wikipedia.org/wiki/Buran_(spacecraft)\"\n                illustrationPath={buranIllustration}\n                letters={[\"Ф\",\"Ё\",\"Ъ\"]}\n            />\n        </div>\n    )\n}\n\nexport default Levels;","import React from 'react';\nimport './App.scss';\nimport AppHeader from './components/organisms/AppHeader';\nimport Footer from './components/organisms/Footer';\nimport Levels from './components/organisms/Levels';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <div className=\"page-container\">\n        <Levels />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}